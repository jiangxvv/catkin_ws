;; Auto-generated. Do not edit!


(when (boundp 'usv_sim::WaypointTrackingGoal)
  (if (not (find-package "USV_SIM"))
    (make-package "USV_SIM"))
  (shadow 'WaypointTrackingGoal (find-package "USV_SIM")))
(unless (find-package "USV_SIM::WAYPOINTTRACKINGGOAL")
  (make-package "USV_SIM::WAYPOINTTRACKINGGOAL"))

(in-package "ROS")
;;//! \htmlinclude WaypointTrackingGoal.msg.html


(defclass usv_sim::WaypointTrackingGoal
  :super ros::object
  :slots (_pos_x _pos_y _heading _mission_type _mission_duration ))

(defmethod usv_sim::WaypointTrackingGoal
  (:init
   (&key
    ((:pos_x __pos_x) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:pos_y __pos_y) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:heading __heading) (make-array 0 :initial-element 0.0 :element-type :float))
    ((:mission_type __mission_type) nil)
    ((:mission_duration __mission_duration) 0.0)
    )
   (send-super :init)
   (setq _pos_x __pos_x)
   (setq _pos_y __pos_y)
   (setq _heading __heading)
   (setq _mission_type __mission_type)
   (setq _mission_duration (float __mission_duration))
   self)
  (:pos_x
   (&optional __pos_x)
   (if __pos_x (setq _pos_x __pos_x)) _pos_x)
  (:pos_y
   (&optional __pos_y)
   (if __pos_y (setq _pos_y __pos_y)) _pos_y)
  (:heading
   (&optional __heading)
   (if __heading (setq _heading __heading)) _heading)
  (:mission_type
   (&optional __mission_type)
   (if __mission_type (setq _mission_type __mission_type)) _mission_type)
  (:mission_duration
   (&optional __mission_duration)
   (if __mission_duration (setq _mission_duration __mission_duration)) _mission_duration)
  (:serialization-length
   ()
   (+
    ;; float64[] _pos_x
    (* 8    (length _pos_x)) 4
    ;; float64[] _pos_y
    (* 8    (length _pos_y)) 4
    ;; float64[] _heading
    (* 8    (length _heading)) 4
    ;; bool _mission_type
    1
    ;; float64 _mission_duration
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64[] _pos_x
     (write-long (length _pos_x) s)
     (dotimes (i (length _pos_x))
       (sys::poke (elt _pos_x i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; float64[] _pos_y
     (write-long (length _pos_y) s)
     (dotimes (i (length _pos_y))
       (sys::poke (elt _pos_y i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; float64[] _heading
     (write-long (length _heading) s)
     (dotimes (i (length _heading))
       (sys::poke (elt _heading i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;; bool _mission_type
       (if _mission_type (write-byte -1 s) (write-byte 0 s))
     ;; float64 _mission_duration
       (sys::poke _mission_duration (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64[] _pos_x
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _pos_x (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _pos_x i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; float64[] _pos_y
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _pos_y (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _pos_y i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; float64[] _heading
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _heading (instantiate float-vector n))
     (dotimes (i n)
     (setf (elt _heading i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     ))
   ;; bool _mission_type
     (setq _mission_type (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float64 _mission_duration
     (setq _mission_duration (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get usv_sim::WaypointTrackingGoal :md5sum-) "8ec2419d2a0aec459c39bee2c36ebd66")
(setf (get usv_sim::WaypointTrackingGoal :datatype-) "usv_sim/WaypointTrackingGoal")
(setf (get usv_sim::WaypointTrackingGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# goal definition
float64[] pos_x
float64[] pos_y
float64[] heading
bool mission_type
float64 mission_duration

")



(provide :usv_sim/WaypointTrackingGoal "8ec2419d2a0aec459c39bee2c36ebd66")


