// Generated by gencpp from file usv_sim/obstacle.msg
// DO NOT EDIT!


#ifndef USV_SIM_MESSAGE_OBSTACLE_H
#define USV_SIM_MESSAGE_OBSTACLE_H

#include <ros/service_traits.h>


#include <usv_sim/obstacleRequest.h>
#include <usv_sim/obstacleResponse.h>


namespace usv_sim
{

struct obstacle
{

typedef obstacleRequest Request;
typedef obstacleResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct obstacle
} // namespace usv_sim


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::usv_sim::obstacle > {
  static const char* value()
  {
    return "11fe2b9b051393d66ed5d61bfe2c5ce7";
  }

  static const char* value(const ::usv_sim::obstacle&) { return value(); }
};

template<>
struct DataType< ::usv_sim::obstacle > {
  static const char* value()
  {
    return "usv_sim/obstacle";
  }

  static const char* value(const ::usv_sim::obstacle&) { return value(); }
};


// service_traits::MD5Sum< ::usv_sim::obstacleRequest> should match 
// service_traits::MD5Sum< ::usv_sim::obstacle > 
template<>
struct MD5Sum< ::usv_sim::obstacleRequest>
{
  static const char* value()
  {
    return MD5Sum< ::usv_sim::obstacle >::value();
  }
  static const char* value(const ::usv_sim::obstacleRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::usv_sim::obstacleRequest> should match 
// service_traits::DataType< ::usv_sim::obstacle > 
template<>
struct DataType< ::usv_sim::obstacleRequest>
{
  static const char* value()
  {
    return DataType< ::usv_sim::obstacle >::value();
  }
  static const char* value(const ::usv_sim::obstacleRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::usv_sim::obstacleResponse> should match 
// service_traits::MD5Sum< ::usv_sim::obstacle > 
template<>
struct MD5Sum< ::usv_sim::obstacleResponse>
{
  static const char* value()
  {
    return MD5Sum< ::usv_sim::obstacle >::value();
  }
  static const char* value(const ::usv_sim::obstacleResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::usv_sim::obstacleResponse> should match 
// service_traits::DataType< ::usv_sim::obstacle > 
template<>
struct DataType< ::usv_sim::obstacleResponse>
{
  static const char* value()
  {
    return DataType< ::usv_sim::obstacle >::value();
  }
  static const char* value(const ::usv_sim::obstacleResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // USV_SIM_MESSAGE_OBSTACLE_H
